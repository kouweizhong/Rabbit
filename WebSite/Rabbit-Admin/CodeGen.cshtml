@using System.IO
@{
    CodeGen.ModuleDirectory = Server.MapPath("~/App_Code/Rabbit/Modules/");
    CodeGen.TestDirectory = Server.MapPath("~/App_Code/Rabbit/Tests/");

    //if Request.Host is not localhost -- should die
    Layout = SiteEngine.RunHook("get_layout") as string;
    Page.Title = "Create Code";

    var module = Request.Form["module-name"];
    var contentType = Request.Form["content-type"];
    var testClass = Request.Form["test-class"];
    if (IsPost)
    {
        if (!Request["createModule"].IsEmpty())
        { 
            CodeGen.CreateModule(module, contentType);
            <meta http-equiv="refresh" content="0;url=/Rabbit-Admin" />
        }
        else if (!Request["createUnitTest"].IsEmpty())
        {
            CodeGen.CreateTest(testClass);
            <meta http-equiv="refresh" content="0;url=/Rabbit-Admin/Test/@testClass" />
        }
    }
}

<form method="post">
<p>Note: Don't run this page in production.This is a tool only for development. </p>
<h2>Create New Module</h2>
    Module: <input type="text" name="module-name" value="@module" />
    Content Type: <input type="text" name="content-type" value="@contentType"/>
    <input type="submit" name="createModule" value="Create" />
<p>Use <a href="/Rabbit-Admin">Rabbit Framework Admin</a> to enable the module.</p>
<hr />
<h2>Create Unit Test</h2>
    Test Class: <input type="text" name="test-class" value="@testClass"/>
    <input type="submit" name="createUnitTest" value="Create" />
<p>Use <a href="/Rabbit-Admin/Test/@testClass">Unit Test</a> to run test.</p>
</form>
