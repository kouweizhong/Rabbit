@{
    Page.Modules = IsPost ?
        SiteEngine.SetModules(Request.Form["modules"]) :
        SiteEngine.GetModules();
    
    Page.Settings = IsPost ?
        SiteSettings.New(Request.Form).Save().Value :
        SiteSettings.Load().Value;

    var adminmenu = SiteEngine.RunHook("get_module_admin_menu", new List<string>()) as List<string>;    
    
    //maybe somebody can provide a prettier view?
    var view = SiteEngine.RunHook("get_rabbit_setup_view", "") as string;
}

@if (!view.IsEmpty())
{
    @RenderPage(view, Page)
}
else
{
    if (IsPost)
    {
        App.Site = SiteSettings.Load().Value;
        Response.Redirect("~/");
    }
<!DOCTYPE html>
<html>
<head>
<title>Rabbit Setup</title>
<style type="text/css">
body {
    font-size: 14px;
    font-family: "Trebuchet MS", Verdana, Helvetica, Sans-Serif;
    color: #696969;
    padding:10px 50px;
} 
h1, h2
{
    margin-bottom: -12px;
}    
ol
{
    padding: 0;
    list-style: none;
}

ol li
{
    padding-bottom: 5px;
}
label 
{
    display:block;
    margin:8px 0px 2px 0px;
}
input[type=text]
{
    width:300px;
}   
select
{
    width:310px;
    height:26px;
}
</style>
</head>
<body>
<h1>Setup Your Rabbit Site</h1>
<p>A rabbit site is a web site that supports modules, plug-ins and templates. <br />
For more information, please visit <a href="http://rabbit.codeplex.com">Rabbit Framework</a>.</p>
<div style="float:left;width:50%">
<h2>Site Information</h2>
<form method="post" action="">
    <ol>
       <li>@Html.Label("Site Name") @Html.TextBox("Name", Page.Settings.Name)</li>
       <li>@Html.Label("Author")    @Html.TextBox("Author", Page.Settings.Author)</li>
       <li>@Html.Label("Template") @Site.Templates(Page.Settings.Template)</li>
    </ol>
<p><input type="checkbox" name="enableLog" @Html.Raw(Log.Enabled?"checked=\"checked\"":"") /> Enable Logging</p>

<h2>Modules</h2>
<p>Listed below are all available Rabbit modules. To disable a module, put a # in front of it.<br />
The modules will be loaded using the order they appear in the list.</p>
        <textarea name="modules" rows="6" cols="40">@Page.Modules</textarea> <input type="submit" value="Save" />
<p>Note: In order to use modules, backup your root Default.cshtml file and <br />
copy _Home_Default.cshtml to the root folder.</p>
</form>
</div>

@if (adminmenu.Count() > 0)
{ 
 <div style="float:right;width:50%">
<h2>Module Admin</h2>
<ol>
@foreach(var menu in adminmenu)
{
    if(menu.Contains('|'))
    {
        var ss = menu.Split('|');
        <li><a href="@Href(ss[1])">@ss[0]</a></li>
    }
}
</ol>   
</div> 
}

</body>
</html>
}